#spring����
spring.application.name=demo-spring-boot-dubbo-provider
server.port=8001
#bean�ظ����帲��
spring.main.allow-bean-definition-overriding=true
#dubbo����
dubbo.scan.basePackages=com.provider
dubbo.application.id=demo-spring-boot-dubbo-provider
dubbo.application.name=demo-spring-boot-dubbo-provider
#Э������
dubbo.protocol.id=dubbo
dubbo.protocol.name=dubbo
dubbo.protocol.port=20888
#ע����������
dubbo.registry.id=demo-zk-registry
dubbo.registry.address=zookeeper://49.233.190.66:2181


#��־����
logging.level.root = info
logging.level.org.springframework.web = info
logging.level.com = debug
logging.level.sql = debug


#sharding-jdbc(ˮƽ�ֱ�)
#����Դ����
spring.shardingsphere.datasource.names=db1
spring.shardingsphere.datasource.db1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.db1.driver-class-name = com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.db1.url = jdbc:mysql://49.233.190.66:3306/mall_db_2
spring.shardingsphere.datasource.db1.username = root
spring.shardingsphere.datasource.db1.password = root

#ָ����Ʒ������ݷֲ�������������ݽڵ�
spring.shardingsphere.sharding.tables.t_goods.actual-data-nodes = db1.t_goods_$->{1,2}

#ָ���������ɲ���
spring.shardingsphere.sharding.tables.t_goods.key-generator.column = Fid
spring.shardingsphere.sharding.tables.t_goods.key-generator.type = SHOWFLAKE

#���ݷ�Ƭ���ԣ���Ƭ������Ƭ�㷨
spring.shardingsphere.sharding.tables.t_goods.table-strategy.inline.sharding-column = Fid
spring.shardingsphere.sharding.tables.t_goods.table-strategy.inline.algorithm-expression = t_goods_$->{Fid % 2 + 1}






